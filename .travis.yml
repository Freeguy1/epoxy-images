# Travis configuration for epoxy-images
#
# epoxy-images supports release automation to Cloud Storage buckets for branches
# in the m-lab/epoxy-images repository. To achieve this, the build takes the
# following steps:
#
#  * decrypt service account credentials, under keys/*.tar.enc
#  * install the Google Cloud SDK command line tools (gcloud)
#  * cache the gcloud installation and setup
#  * build all epoxy-images
#  * on success, deploy the result to the correct Cloud Storage bucket when
#    the target branch matches a supported deployment target.

services:
- docker

# These directories will be cached on successful "script" builds, and restored,
# if available, to save time on future builds.
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

script:
- set -e

- time docker build -t epoxy-images-builder . &> build.log || (cat build.log && false)

# Enable gsutil downloads from private GCS buckets, using the mlab-sandbox SA.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- $TRAVIS_BUILD_DIR/travis/activate_service_account.sh SERVICE_ACCOUNT_mlab_sandbox

- mkdir -p $TRAVIS_BUILD_DIR/output

# Build coreos custom initram image.
# Note: set the umask so the travis user can read newly created files.
#- travis_wait time docker run -e PROJECT=mlab-sandbox -e ARTIFACTS=/workspace/output
#    -v $TRAVIS_BUILD_DIR:/workspace -w /workspace epoxy-images-builder
#    bash -c "umask 0022; /workspace/builder.sh stage3_coreos" || false
#- ls -l $TRAVIS_BUILD_DIR/output

# Build stage3 mlxupdate image.
#
# Note: download the mellanox firmware tools from cache in private bucket,
#       since origin (http://www.mellanox.com/downloads/MFT/mft-4.4.0-44.tgz)
#       is sloooow.
- mkdir -p $TRAVIS_BUILD_DIR/vendor/
- gsutil cp gs://vendor-mlab-oti/epoxy-images/mft-4.4.0-44.tgz $TRAVIS_BUILD_DIR/vendor/

# Note: build must be privileged to mount /proc & /sys during debootstrap build.
#
# Note: when /build location is internal to container fs, i/o is more efficient.
#
# Note: larger sets of per-project images are built by Cloud Builder, outside of travis.
- travis_wait time docker run -t --privileged -e PROJECT=mlab-sandbox -e ARTIFACTS=/workspace/output
    -v $TRAVIS_BUILD_DIR:/workspace -w /workspace epoxy-images-builder
    bash -c "umask 0022; /workspace/builder.sh stage3_mlxupdate" || false
- ls -l $TRAVIS_BUILD_DIR/output

# Build a stage1 ROM images for a test machine.
#
# Note: because this is only *testing* the build and not deploying the
# artifacts of the build, the ROM version is fake and does not matter.
- travis_wait time docker run -e PROJECT=mlab-sandbox -e ARTIFACTS=/workspace/output
    -it -v $TRAVIS_BUILD_DIR:/workspace -w /workspace epoxy-images-builder
    bash -c "mkdir -p /build && /workspace/builder.sh stage1_mlxrom" || false
- ls -l $TRAVIS_BUILD_DIR/output/stage1_mlxrom

# NOTE: Build and deployment is managed by CloudBuilder triggers registered in
# each GCP project and the steps defined in cloudbuild.yaml.
